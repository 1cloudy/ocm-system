@model OCM.MVC.Models.POIViewModel

@{
    ViewBag.Title = ViewBag.FullTitle;
}


<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.css" />
<!--[if lte IE 8]>
        <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.ie.css" />
    <![endif]-->

<script src="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.js"></script>

<ul class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index", "Home") <span class="divider">/</span></li>
    <li>@Html.ActionLink("Browse", "Index", "POI") <span class="divider">/</span></li>
    <li class="active">@Model.POI.AddressInfo.Title, @Model.POI.AddressInfo.Country.Title <small>OCM-@Model.POI.ID</small></li>
</ul>

@if (Session["UserID"] != null)
{
    <div class="form-actions">
        <a href="@Url.Action("Edit", "POI", new { id = Model.POI.ID })" class="btn btn-info">Edit</a>
    </div>
}
<div id="details-imageblock"></div>
<div id="details-container" class="details-container">
    <h1><span id="location-title">@Html.DisplayFor(m => m.POI.AddressInfo.Title)</span><small data-localize="ocm.details.title">charging location</small></h1>

    <div class="tabbable">
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#tab-general" data-toggle="tab" data-localize="ocm.details.locationDetails">Details</a>
            </li>
            <li>
                <a href="#tab-map" data-toggle="tab" data-localize="ocm.details.map">Map</a>
            </li>
            <li>
                <a href="#tab-equipment" data-toggle="tab" data-localize="ocm.details.equipmentDetails">Equipment Info</a>
            </li>
            <li>
                <a href="#tab-comments" data-toggle="tab" data-localize="ocm.details.commentsAndRatings">Comments (@if (Model.POI.UserComments != null)
                                                                                                                   { @Model.POI.UserComments.Count }
                                                                                                                   else
                                                                                                                   { @Html.Raw(0) })</a>
            </li>
            <li>
                <a href="#tab-nearby" data-toggle="tab" data-localize="ocm.details.placesNearby">Places Nearby</a>
            </li>
            <li>
                <a href="#tab-media" data-toggle="tab" data-localize="ocm.details.mediaItems">Photos (@if (Model.POI.MediaItems != null)
                                                                                                      { @Model.POI.MediaItems.Count }
                                                                                                      else
                                                                                                      { @Html.Raw(0) })</a>
            </li>
        </ul>

        <div class="tab-content">
            <div id="tab-general" class="tab-pane active">
                <div id="locationdetails-container">

                    <div id="location-details">

                        <address>
                            @Html.DisplayFor(m => m.POI.AddressInfo.AddressLine1)<br />
                            @Html.DisplayFor(m => m.POI.AddressInfo.AddressLine2)<br />
                            @Html.DisplayFor(m => m.POI.AddressInfo.Town)<br />
                            @Html.DisplayFor(m => m.POI.AddressInfo.StateOrProvince)<br />
                            @Html.DisplayFor(m => m.POI.AddressInfo.Postcode)<br>
                            @Html.DisplayFor(m => m.POI.AddressInfo.Country.Title)<br>
                        </address>

                        <div class="row-fluid">
                            <div class="span6">
                                @if (!String.IsNullOrEmpty(Model.POI.GeneralComments))
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.generalComments">General Comments</strong>:
                                <p>@Html.DisplayFor(m => m.POI.GeneralComments)</p>
                                    </div>
                                }
                                @if (!String.IsNullOrEmpty(Model.POI.AddressInfo.AccessComments))
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.accessComments">Access Comments</strong>:
                                <p>@Html.DisplayFor(m => m.POI.AddressInfo.AccessComments)</p>
                                    </div>
                                }

                                @if (Model.POI.NumberOfPoints != null)
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.numberOfPoints">Number Of Points</strong>:
                            @Html.DisplayFor(m => m.POI.NumberOfPoints)
                                    </div>
                                }
                                @if (Model.POI.UsageType != null)
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.usageType">Usage</strong>:
                            @Html.DisplayFor(m => m.POI.UsageType.Title)
                                    </div>
                                }


                            </div>
                            <div class="span6">
                                @if (Model.POI.OperatorInfo != null)
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.networkOperator">Network/Operator</strong>:
                            @Html.DisplayFor(m => m.POI.OperatorInfo.Title)
                                    </div>
                                }
                                @if (Model.POI.StatusType != null)
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.operationalStatus">Operational Status</strong>:
                            @Html.DisplayFor(m => m.POI.StatusType.Title)
                                    </div>
                                }

                                @if (Model.POI.DataProvider != null)
                                {
                                    <div>
                                        <strong class="ocm-label" data-localize="ocm.details.dataProvider">Data Provider</strong>:
                                        @Html.DisplayFor(m => m.POI.DataProvider.Title)
                                        @Html.DisplayFor(m => m.POI.DataProvider.WebsiteURL)

                                    </div>
                                }
                            </div>
                        </div>

                        @if (Model.POI.DataProvider.DataProviderStatusType.ID == 20)
                        {
                            <div class="alert alert-info" data-localize="ocm.details.importedNotice">Note: This data is sourced automatically, changes should be submitted to the data provider directly.</div>
                        }
                    </div>
                </div>
            </div>
            <div id="tab-map" class="tab-pane">
                <div id="map-container">
                    <div id="map" style="min-width: 300px; min-height: 300px;"></div>
                </div>
            </div>
            <div id="tab-equipment" class="tab-pane">
                @if (Model.POI.Connections != null)
                {
                    Html.RenderPartial("_ConnectionList", Model.POI.Connections);
                }
            </div>
            <div id="tab-comments" class="tab-pane">
                 
                <div class="row-fluid">
                    <div class="span6">
                        <p>Add your own comment/check-in for this location:</p>

                        @if (Session["UserID"] != null)
                        {
                            @Html.EditorFor(m => m.NewComment)
                        }
                        else
                        {
                            @Html.ActionLink("Sign In", "SignIn", "Profile", new { redirectUrl = Url.Action("Details", "POI", new { id = Model.POI.ID }) }, new { @class = "btn btn-primary" })
                        }
                    </div>
                    <div class="span6">
                        @Html.DisplayFor(m => m.POI.UserComments)
                    </div>
                </div>
                 
            </div>
            <div id="tab-nearby" class="tab-pane">
            </div>
            <div id="tab-media" class="tab-pane">
                <p>
                    Upload your own photos for this location:
                    @if (Session["UserID"] != null)
                    {
                        @Html.ActionLink("Upload", "AddMediaItem", "POI", new { id = Model.POI.ID }, new { @class = "btn btn-primary" })
                    }
                    else
                    {
                        @Html.ActionLink("Sign In", "SignIn", "Profile", new { redirectUrl = Url.Action("AddMediaItem", "POI", new { id = Model.POI.ID }) }, new { @class = "btn btn-primary" })
                    }


                </p>
                @if (Model.POI.MediaItems != null)
                {
                    Html.RenderPartial("_MediaItemList", Model.POI.MediaItems);
                }
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        //setup tabs
        $('a#tab-general').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        $('a#tab-map').click(function (e) {
            e.preventDefault();
            $(this).tab('show');

        });

        //fix map after tab shown
        //('a[data-toggle="tab"]').on('shown', function (e) {
        $('a[data-toggle="tab"]').on('shown', function (e) {
            if (e.target.hash == "#tab-map") {
                map.invalidateSize(false);
            }

        });

        $('a#tab-comments').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        $('a#tab-equipment').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        $('a#tab-nearby').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        $('a#tab-media').click(function (e) {
            e.preventDefault();
            $(this).tab('show');
        });

        //setup map

        @{
            var scriptContent = "var lat = " + Model.POI.AddressInfo.Latitude + "; var lng = " + Model.POI.AddressInfo.Longitude + ";";
        }

        @Html.Raw(scriptContent)

        var itemPos = [lat, lng];

        //setup map
        var map = new L.Map('map');

        // create the tile layer with correct attribution
        var osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
        var osmAttrib = 'Map data © OpenStreetMap contributors';
        var osm = new L.TileLayer(osmUrl, { minZoom: 10, maxZoom: 18, attribution: osmAttrib });

        // start the map centred on location
        map.setView(new L.LatLng(itemPos[0], itemPos[1]), 15);
        map.addLayer(osm);

        L.marker(itemPos).addTo(map);

        //setup background image
        getLocationImage(itemPos);

        //fetch nearby places
        getNearbyPlaces(itemPos[0], itemPos[1], 2);
    });

    function getLocationImage(pos) {
        @if (ViewBag.ImageList != null && ViewBag.ImageList.Count > 0)
        {
            var locationImage = ViewBag.ImageList[0];
            <text>
        $('#details-imageblock').html("<img src='@locationImage.ImageURL'/><div><img src='http://www.panoramio.com/img/logo-tos.png'> <a href='@locationImage.DetailsURL'>view original</a> author: <a href='@locationImage.SubmitterURL'>@locationImage.Submitter</a> Photos provided by Panoramio are under the copyright of their owners</div>");
            </text>
        }
    }


    /*
     * Construct the URL to call for the API request
     */
    function constructYelpURL(lat, lng, radius) {

        var URL = "http://api.yelp.com/" +
            "business_review_search?" +
            "callback=?&limit=10" +
            "&lat=" + lat +
            "&long=" + lng +
            "&radius=" + radius +
            "&ywsid=" + "ePh1dFy4Z-Gc56W2sFuSfw";
        return encodeURI(URL);

        //http://api.yelp.com/business_review_search?term=yelp&lat=37.788022&long=-122.399797&radius=10&limit=5&ywsid=XXXXXXXXXXXXXXXXXX
    }

    function getNearbyPlaces(lat, lng, radius) {

        var yelpRequestURL = constructYelpURL(lat, lng, radius);

        $.getJSON(yelpRequestURL, function (data) {

            if (data != null) {
                var output = "";
                var poiList = data.businesses;

                for (var i = 0; i < poiList.length; i++) {
                    var poi = poiList[i];
                    output += "<div class='nearby-place'><img class='place-img' src='" + poi.photo_url_small + "'/> <h3>" + poi.name +
									"&nbsp;<img src='" + poi.rating_img_url_small + "'/>" +
									(poi.categories.length > 0 ? " <small>" + poi.categories[0].name + "</small> " : "") +
									"<small><a target='_blank' href='" + poi.url + "'>View More Details</a></small></h3>" +
                                    "<div>Distance: " + (Math.round(poi.distance * 10) / 10) + "</div>" +
									"</div>";
                }

                $("#tab-nearby").html(output);
            }
        });
    }
</script>
