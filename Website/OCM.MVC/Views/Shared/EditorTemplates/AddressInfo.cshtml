@model OCM.API.Common.Model.AddressInfo

<div class="row-fluid">
    <div class="span6">
        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AddressLine1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AddressLine1)
            @Html.ValidationMessageFor(model => model.AddressLine1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AddressLine2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AddressLine2)
            @Html.ValidationMessageFor(model => model.AddressLine2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Town)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Town)
            @Html.ValidationMessageFor(model => model.Town)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StateOrProvince)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StateOrProvince)
            @Html.ValidationMessageFor(model => model.StateOrProvince)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Postcode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Postcode)
            @Html.ValidationMessageFor(model => model.Postcode)
        </div>
         <div class="editor-label">
            @Html.LabelFor(model => model.Country)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Country.ID, (SelectList)ViewBag.ReferenceData.CountryList)
            @Html.ValidationMessageFor(model => model.Country)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ContactTelephone1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactTelephone1)
            @Html.ValidationMessageFor(model => model.ContactTelephone1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactTelephone2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactTelephone2)
            @Html.ValidationMessageFor(model => model.ContactTelephone2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactEmail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactEmail)
            @Html.ValidationMessageFor(model => model.ContactEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AccessComments)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.AccessComments)
            @Html.ValidationMessageFor(model => model.AccessComments)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RelatedURL)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RelatedURL)
            @Html.ValidationMessageFor(model => model.RelatedURL)
        </div>

    </div>
    <div class="span6">
        <div id="map-canvas" class="map-box" style="width: 100%; height: 300px; margin-bottom: 1em;"></div>
        <p class="text-info">Drag the map marker above to specify the exact position of this charging equipment.</p>
        <div class="editor-label">
            @Html.LabelFor(model => model.Latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Latitude)
            @Html.ValidationMessageFor(model => model.Latitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Longitude)
            @Html.ValidationMessageFor(model => model.Longitude)
        </div>

        <div>
           <!--
            <input type="button" class="btn btn-default" value="Use Address" />
            <input type="button" class="btn btn-default" value="Refresh Map" />
               -->
        </div>
    </div>
</div>

<script src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script>

    //TODO: shadow marler for oriogional marker pos, find near me, show geocoded address, optionto adopt new address, show duplicates nearby
    var map, poiPos;

    @{
        var scriptContent = "var lat = " + Model.Latitude + "; var lng = " + Model.Longitude + ";";
    }

    @Html.Raw(scriptContent)

    function initializeMap() {

        // Enable the visual refresh
        //google.maps.visualRefresh = true;

        poiPos = new google.maps.LatLng(lat, lng);
        var mapOptions = {
            zoom: 16,
            center: poiPos,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            panControl: true,
            zoomControl: true,
            scaleControl: true
        };
        map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            animation: google.maps.Animation.DROP,
            position: poiPos
        });

        google.maps.event.addListener(marker, 'drag', setNewPOIPos);

    }

    function setNewPOIPos(e) {
        var newPos = e.latLng;
        poiPos = newPos;
        $("#@Html.IdFor(m => m.Latitude)").val(newPos.lat());
        $("#@Html.IdFor(m => m.Longitude)").val(newPos.lng());

      }

      function refreshMap() {
          google.maps.event.trigger(map, 'resize');
          map.setCenter(poiPos);
      }

      google.maps.event.addDomListener(window, 'load', initializeMap);

      google.maps.event.addListenerOnce(map, 'idle', function () {
          refreshMap();
      });

      //go-go-gadget map
      initializeMap();
</script>
